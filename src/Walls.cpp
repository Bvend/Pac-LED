#include "Walls.h"

int Walls::scenery[16][32] = {{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,1},
                              {0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0},
                              {0,0,1,0,1,0,0,0,2,0,0,0,0,1,2,1,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,1},
                              {0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
                              {0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1},
                              {1,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0},
                              {0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0},
                              {1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0},
                              {0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0},
                              {1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0},
                              {0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,2,0,0,1,0,0,0,0,0,0,0,1},
                              {0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
                              {0,0,1,0,1,0,0,0,2,0,0,0,0,1,2,1,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,1},
                              {0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0},
                              {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,1},
                              {1,0,1,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0}};

int Walls::cherryPosy[9] = {0,0,14,14,2,12,10,2,12};

int Walls::cherryPosx[9] = {0,30,30,0,14,14,20,8,8};

int Walls::numCherrys = 9;

void Walls::initializeScenery() { for (int i = 0; i < numCherrys; i++) scenery[cherryPosy[i]][cherryPosx[i]] = 2; }

int Walls::getCherryPosy(int index) { return cherryPosy[index]; }

int Walls::getCherryPosx(int index) { return cherryPosx[index]; }

bool Walls::checkWall(int posy, int posx) { return (scenery[posy][posx] == 1); }

void Walls::eatCherry(int posy, int posx) { scenery[posy][posx] = 0; }

bool Walls::checkCherry(int posy, int posx) { return (scenery[posy][posx] == 2); }

int Walls::getNumCherrys() { return numCherrys; }

Walls::~Walls()
{
}
